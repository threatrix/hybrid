#!/bin/bash
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
LIME=$(tput setaf 190)
POWDER_BLUE=$(tput setaf 153)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)
BRIGHT=$(tput bold)
NORMAL=$(tput sgr0)
BLINK=$(tput blink)
REVERSE=$(tput smso)
UNDERLINE=$(tput smul)


banner()
{
  echo $BLUE $UNDERLINE "                                            " $NORMAL
  echo
  echo $BRIGHT $BLUE "   $@" $NORMAL
  echo "                                            "
  echo $BRIGHT $BLUE "   `date`" $NORMAL
  echo $BLUE $UNDERLINE "                                            " $NORMAL
  echo
}

banner "Welcome to Threatrix Hybrid Install"
UX=latest
APP=latest
DB=latest
ARG0=$(basename "$0")
LOG_FILE=install.log

usage()
{
  echo "Usage: $BRIGHT $ARG0 -h -u <ux tag> -a <app tag> -d <db tag>"
  echo " -h : Help"
  echo " -u <ux tag>: Version of the UX image you want to upgrade to. Default is latest"
  echo " -a <app tag>: Version of the APP image you want to upgrade to. Default is latest"
  echo " -d <db tag>: Version of the DB image you want to upgrade to. Default is latest"
  echo
  exit 1
}

while getopts ":u:a:d:h" opt; do
  case ${opt} in
    h ) # process option h
        usage
        exit 1
        ;;
    u ) # UX Version
        UX=$OPTARG
        ;;
    a ) # App version
        APP=$OPTARG
        ;;
    d ) # DB Version
        DB=$OPTARG
        ;;
    default )
        usage
        exit 1
        ;;
    :)
        echo "Error: Option -$OPTARG requires an argument."
        usage
        exit 1
  esac
done

echo $GREEN "Installing the following components in your Hybrid Envirnment:"
echo
echo "$BLUE  Threat Center: $LIME $UX"
echo "$BLUE  API          : $LIME $APP"
echo "$BLUE  DB           : $LIME $DB"
echo "$BLUE  Rabbit MQ    : $LIME rabbitmq:3"
echo "$BLUE  Elastic      : $LIME elasticsearch:7.12.0"
echo "$BLUE  Kibana       : $LIME kibana:7.12.0"
echo $NORMAL
echo

while true; do
    read -p "Do you want to continue? ($GREEN y $WHITE or $RED n $WHITE) " yn
    case $yn in
        [Yy]* ) echo; echo $GREEN "Proceeding with install..."; break;;
        [Nn]* ) echo; echo $RED "Aborting install!"; exit;;
        * ) echo "Please answer yes or no.";;
    esac
done
echo $NORMAL
echo $GREEN "Downloading Containers...."
sudo docker pull threatrix/hybrid-db:$DB > install.log
sudo docker pull threatrix/hybrid-app:$APP >> install.log
sudo docker pull threatrix/threat-center:$UX >> install.log
sudo docker pull rabbitmq:3 >> install.log
sudo docker pull elasticsearch:7.12.0 >> install.log
sudo docker pull kibana:7.12.0 >> install.log 

echo $GREEN "Starting containers...."
# Deploy and Run Threatrix Database
sudo docker run -d --restart always --name threatrix-db --volume /opt/threatrix/db:/var/lib/scylla --hostname -threatrix -p 9042:9042 -d threatrix/hybrid-db:$DB --smp 2 --memory 4G --developer-mode 1 >> install.log

if [ $? -ne 0 ]; then 
	echo $RED "Failed to start Threatrix database. Please correct the problem and reinstall...."
	exit
fi

# Install and Run RabbitMQ
sudo docker run -d --restart always --network=host --hostname hybrid --name rabbitmq  -e RABBITMQ_DEFAULT_USER=threatrix -e RABBITMQ_DEFAULT_PASS=DwkEc?#NxSJS_E6M%qcB rabbitmq:3 >> install.log

if [ $? -ne 0 ]; then 
	echo $RED "Failed to start RabbitMQ. Please correct the problem and reinstall...."
	exit
fi

# Install and Run Elastic
sudo docker run -d --restart always --name elasticsearch --network=host --hostname hybrid -e "discovery.type=single-node" --env ES_JAVA_OPTS="-Xmx3g" elasticsearch:7.12.0 >> install.log

if [ $? -ne 0 ]; then 
	echo $RED "Failed to start ELastic. Please correct the problem and reinstall...."
	exit
fi
# Install and Run Kibana
sudo docker run -d --restart always --name kibana --network=host --hostname hybrid kibana:7.12.0 >> install.log

if [ $? -ne 0 ]; then 
	echo $RED "Failed to start Kibana Please correct the problem and reinstall...."
	exit
fi

# wait for database to init
echo $GREEN "Waiting for database to initialize...."
sleep 60
# Setup schema
echo $GREEN "Creating schemas...."
sudo docker exec -it threatrix-db cqlsh -f /opt/threatrix/threatrix-schema.cql >> install.log
sudo docker exec -it threatrix-db cqlsh -f /opt/threatrix/corp-keyspace-schema.cql >> install.log

# Import licenses
sudo docker exec -it threatrix-db cqlsh -e "COPY threatrix.license FROM '/opt/threatrix/license.cql' WITH HEADER=TRUE AND MINBATCHSIZE=1 AND MAXBATCHSIZE=1 AND PAGESIZE=10;" >> install.log

echo $GREEN "Starting Threatrix Components...."
# Deploy and Run Hybrid Server
sudo docker run -d --restart always --network=host --name threatrix-hybrid-app -e LOCAL_IP=`hostname -I | awk  '{print $1}'` threatrix/hybrid-app:$APP  >> install.log

if [ $? -ne 0 ]; then 
	echo $RED "Failed to start Threatrix Application. Please correct the problem and reinstall...."
	exit
fi

# Deploy and Run Threat Center
sudo docker run -d --restart always --network=host --name threatrix-threat-center threatrix/threat-center:$UX  >> install.log
if [ $? -ne 0 ]; then 
	echo $RED "Failed to start Threatrix Threat Center. Please correct the problem and reinstall...."
	exit
fi

echo
banner "Threatrix Hybrid installation complete!"
echo $NORMAL
